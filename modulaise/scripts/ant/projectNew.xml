<?xml version="1.0"?>
<project>
	<target name="projectNew" depends="projectNewInput,
		projectNewMessage,
		projectNewWrite">
	</target>
	<target name="projectNewInput">
		<input 
			addproperty="projectNew.name">
Create new project wizard (Step 1 of 3)
			
You must give your project a name, the name must consist of lowercase ascii characters with no spaces or punctuations.

</input>
		<available file="${basedir}/../${projectNew.name}" type="dir" property="projectNew.name.exists"/>
		<fail>
			<condition>
				<equals arg1="true" arg2="${projectNew.name.exists}"/>
			</condition>

ERROR!
--------------------------------------------------------------------------------
Directory exists        : ${basedir}/../${projectNew.name}
			
The directory already exists, please rename or delete the above directory and try again.
		</fail>
		<input defaultvalue="${ALL_BOILERPLATES_DEFAULT}"
			addproperty="projectNew.boilerplate"
			validargs="${ALL_BOILERPLATES}">
Create new project wizard (Step 2 of 3)

Select the boilerplate you will be using for your new project.
		</input>
	</target>
	<target name="projectNewMessage">
		<echo>
Preparing new project
--------------------------------------------------------------------------------
Project name            : ${projectNew.name}
Directory for project   : ${basedir}/../${projectNew.name}
Using boilerplate from  : ${PATH_BOILERPLATES_PROJECTS}/${projectNew.boilerplate}
		</echo>
	</target>
	<target name="projectNewWrite">

		<!-- make the new folders -->
		<mkdir dir="${basedir}/../${projectNew.name}"/>
		<mkdir dir="${basedir}/../${projectNew.name}/modulaise"/>

		<!-- copy the modulaise core files -->
		<copy todir="${basedir}/../${projectNew.name}/modulaise">
			<fileset dir="${basedir}/modulaise">
				<exclude name="**/*.svn"/>
				<exclude name="**/*.svn/**" />
				<exclude name="**/boilerplates/projects/**" />
				<exclude name="**/config-project/**" />
			</fileset>
		</copy>
		
		<!-- copy over the boilerplate -->
		<copy todir="${basedir}/../${projectNew.name}">
			<fileset dir="${PATH_BOILERPLATES_PROJECTS}/${projectNew.boilerplate}">
				<exclude name="**/*.svn"/>
				<exclude name="**/*.svn/**" />
			</fileset>
		</copy>
		
		<!-- replace name of project -->
		<replace dir="${basedir}/../${projectNew.name}" value="${projectNew.name}">
			<exclude name="**/modulaise/boilerplates/**"/>
			<exclude name="**/modulaise/config-global/**"/>
			<exclude name="**/modulaise/docs/**"/>
			<exclude name="**/modulaise/lib/**"/>
			<exclude name="**/modulaise/scripts/**"/>
			<exclude name="**/modulaise/common/**"/>
			<exclude name="**/*.svn"/>
			<exclude name="**/*.svn/**" />
			<include name="**/**"/>
		  <replacetoken>__PROJECT_NEW_NAME__</replacetoken>
		</replace>
		
		<!-- replace file hosts of project -->
		<replace dir="${basedir}/../${projectNew.name}" value="${FILE_HOSTS}">
			<include name="README.markdown"/>
		  	<replacetoken>__FILE_HOSTS__</replacetoken>
		</replace>
		
		<!-- replace file hosts of project -->
		<replace dir="${basedir}/../${projectNew.name}" value="${FILE_APACHE_CONFIGURATION}">
			<include name="README.markdown"/>
			<replacetoken>__FILE_APACHE_CONFIGURATION__</replacetoken>
		</replace>

		<!-- replace file hosts of project -->
		<replace dir="${basedir}/../${projectNew.name}" value="${workspace}">
			<include name="README.markdown"/>
			<replacetoken>__DIR_WORKSPACE__</replacetoken>
		</replace>
		
		<input defaultvalue="${projectNew.name}">
Create new project wizard (Step 3 of 3)
				
After closing this wizard, two steps remain before your are finished.
		
1. Create new Static Web Project

In Eclipse choose to create a new "Static Web Project" with the exact name "${projectNew.name}". This creates a project in the folder: ${basedir}/../${projectNew.name}

2. After configurations
		
Read and follow the instructions from the README.markdown file at ${basedir}/../${projectNew.name}/README.markdown
		
Press return to close the wizard.

</input>	
	</target>
</project>